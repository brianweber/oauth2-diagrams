@startuml
!theme cloudscape from /Users/brianweber/Downloads/oauth2-diagrams/themes

!pragma teoz true

participant "Relying Party\n(OAuth Client)\nhttps://rp" as client
box
    participant "User Agent / Frontend\nfor Relying Party" as uac
    actor "User\n(OAuth Resource Owner)" as user
    participant "User Agent / Frontend for\nOpenID Provider" as uaas
end box
participant "OpenID Provider\n(OAuth Authorization Server)\nhttps://op" as as


user -> uac: Request to login
& uac -> client

|||


client -> uac : (HTTPS 302)
& uac -> uaas: **Authentication Request** (OAuth Authorization Request)\nRedirection to GET https://rp/auth (authorization_endpoint)\n  ?response_type= id_token / id_token token (REQUIRED)\n  &client_id=CID-XXXX (REQUIRED, opaque)\n  &redirect_uri=https%3A%2F%2Fclient%2Ecallback (always REQUIRED in OpenID Connect)\n  &scope=openid+profile+email+phone (OPTIONAL)\n  &state=AS-XXXX (RECOMMENDED, opaque)\n  &nonce=AN-XXXX (REQUIRED, protect against replay attacks)\n  …
& uaas -> as

hnote over as: Check redirect_uri allowed for client_id

opt User does not already have a session (or 'prompt' includes 'login')
  user <-> uaas : User authentication
  & uaas <-> as
  & note left of user: Authorization Server\nmay use any authentication methods\n(password, WebAuthn, mobile application, etc.)\nfor authenticating the user
end

opt User consent may be skipped if already given unless 'prompt' includes 'consent')
  user <-> uaas : Consent
  rnote left: "Do you want to login on ClientFoo? Information requested: …"
  & uaas <-> as
end

alt response_mode=query

as --> uaas: (HTTPS 302)
& uaas --> uac: **Authentication Response** (OAuth Authorization Response)\nRedirection to GET https://rp/callback (redirect_uri)\n  ?access_token=AT-XXXX (if token in response_type)\n  &token_type=bearer (if token in response_type)\n  &id_token="eyJ…" (REQUIRED, JWT)\n    "iss": "https://op",\n    "sub": "SUB-XXXX", (private for the client_id if subject_type=pairwise)\n    "aud": "CID-XXXX",\n    "exp": …, "iat": …, "auth_time": …,\n    "nonce": "AN-XXXX", (from request, protection against replay attacks)\n    "acr": "…", (OPTIONAL, authentication context class),\n    "amr": […], (OPTIONAL, list of user authentication methods used),\n    "azp": "CID-XXXX",n    "sid": "SID-XXX", (OPTIONAL, different for different RPs, for Front/Back-Channel Logout)\n    "at_hash": "…" (included when response_type="id_token token", half of the hash of the access_token)\n  &scope=scope1 scope2 (OPTIONAL)\n  &state=AS-XXXX (if given)\n  &expires_in=3600 (OPTIONAL)\n  &iss=https://op (extension)
& uac --> client

else 

ref over client, as: other reponse modes

end

hnote over client: Check validity of state\nand its association with the user session\n(protection against CSRF)
hnote over client: Check "iss" field (if given),\nprotection against mixup attacks

ref over client, uac: Process id_token

opt response_type="id_token token"
hnote over client, uac: Check code against at_hash (protect against access_token substitution attacks)
end

hnote over client, uac: Create user session, etc.

client -> uac: Restore application state (eg. target_link_uri)
& uac -> user

@enduml

